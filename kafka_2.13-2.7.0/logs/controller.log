[2024-09-22 14:00:27,341] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 192.168.200.145:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.net.SocketTimeoutException: Failed to connect within 30000 ms
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:293)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:246)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2024-09-22 14:00:33,294] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@e73f9ac, name=log4j:logger=kafka.controller (kafka.controller)
[2024-09-22 14:00:57,450] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 192.168.200.145:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.net.SocketTimeoutException: Failed to connect within 30000 ms
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:293)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:246)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2024-09-22 14:01:27,555] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 192.168.200.145:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.net.SocketTimeoutException: Failed to connect within 30000 ms
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:293)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:246)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2024-09-22 14:01:45,588] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-22 14:01:45,588] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-22 14:01:45,588] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-22 14:01:45,589] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-09-22 14:01:45,589] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-22 14:01:45,590] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-22 14:01:45,591] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-22 14:01:45,591] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-09-22 14:01:45,592] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker 192.168.200.145:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 192.168.200.145:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:246)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2024-09-22 14:01:45,593] WARN [RequestSendThread controllerId=0] Controller 0 epoch 1 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=1, brokerEpoch=24, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='192.168.200.145', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker 192.168.200.145:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1133)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:276)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:234)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2024-09-22 14:01:45,594] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2024-09-22 14:01:45,594] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-09-22 14:01:45,594] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-22 14:01:45,595] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-09-22 14:02:05,852] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@e73f9ac, name=log4j:logger=kafka.controller (kafka.controller)
[2024-09-22 14:02:11,367] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-22 14:02:11,374] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2024-09-22 14:02:11,375] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-22 14:02:11,376] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-22 14:02:11,377] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-22 14:02:11,377] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-22 14:02:11,380] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 75) (kafka.controller.KafkaController)
[2024-09-22 14:02:11,381] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-22 14:02:11,383] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-22 14:02:11,386] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-22 14:02:11,386] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-22 14:02:11,400] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-22 14:02:11,400] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-22 14:02:11,400] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-22 14:02:11,401] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-22 14:02:11,401] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-09-22 14:02:11,401] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-22 14:02:11,401] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-09-22 14:02:11,402] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-22 14:02:11,406] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-22 14:02:11,407] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-22 14:02:11,408] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-22 14:02:11,409] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-09-22 14:02:11,409] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-22 14:02:11,409] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-22 14:02:11,411] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-09-22 14:02:11,411] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-22 14:02:11,411] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2024-09-22 14:02:11,414] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-22 14:02:11,414] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-22 14:02:11,415] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-22 14:02:11,415] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-22 14:02:11,415] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-22 14:02:11,421] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-22 14:02:16,427] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-22 14:02:16,428] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-22 14:02:20,120] INFO [Controller id=0] New topics: [Set(9001)], deleted topics: [HashSet()], new partition replica assignment [Map(9001-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-09-22 14:02:20,120] INFO [Controller id=0] New partition creation callback for 9001-0 (kafka.controller.KafkaController)
[2024-09-22 14:02:31,360] INFO [Controller id=0] New topics: [Set(9002)], deleted topics: [HashSet()], new partition replica assignment [Map(9002-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-09-22 14:02:31,360] INFO [Controller id=0] New partition creation callback for 9002-0 (kafka.controller.KafkaController)
[2024-09-22 14:02:37,794] INFO [Controller id=0] New topics: [Set(9003)], deleted topics: [HashSet()], new partition replica assignment [Map(9003-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-09-22 14:02:37,794] INFO [Controller id=0] New partition creation callback for 9003-0 (kafka.controller.KafkaController)
[2024-09-22 14:05:14,985] INFO [Controller id=0] New topics: [Set(my-topic)], deleted topics: [HashSet()], new partition replica assignment [Map(my-topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-09-22 14:05:14,985] INFO [Controller id=0] New partition creation callback for my-topic-0 (kafka.controller.KafkaController)
[2024-09-22 14:05:15,095] INFO [Controller id=0] New topics: [HashSet(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2024-09-22 14:05:15,095] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2024-09-22 14:07:16,436] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-22 14:07:16,437] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-22 14:07:16,445] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-22 14:07:16,447] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-22 14:12:16,454] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-22 14:12:16,455] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-22 14:12:16,458] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-22 14:12:16,458] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-22 14:17:16,464] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-22 14:17:16,466] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-22 14:17:16,468] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-22 14:17:16,468] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
